{
  "version": 15,
  "variables": [
    {
      "key": "Product",
      "type": "query",
      "visible": true,
      "input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n         AND isNotNull(vulnerable_component.name)\n| sort timestamp desc\n| summarize values = array(\"All\", collectDistinct(event.provider_product))",
      "multiple": true,
      "defaultValue": [
        "All"
      ]
    },
    {
      "key": "RiskLevel",
      "type": "query",
      "visible": true,
      "input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n         AND isNotNull(vulnerable_component.name)\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n| summarize by:vulnerability.risk.level, score=takeMax(vulnerability.risk.score)\n| sort score desc\n| summarize values = array(\"All\", collectDistinct(vulnerability.risk.level))",
      "multiple": true,
      "defaultValue": [
        "All"
      ]
    },
    {
      "key": "Vulnerability",
      "type": "query",
      "visible": true,
      "input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n         AND isNotNull(vulnerable_component.name)\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n| sort timestamp desc\n| summarize values = array(\"All\", collectDistinct(vulnerability.external_id))",
      "multiple": true,
      "defaultValue": [
        "All"
      ]
    },
    {
      "key": "Component",
      "type": "query",
      "visible": true,
      "input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n         AND isNotNull(vulnerable_component.name)\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n| sort timestamp desc\n| summarize values = array(\"All\", collectDistinct(vulnerable_component.name))",
      "multiple": true,
      "defaultValue": [
        "All"
      ]
    },
    {
      "key": "AffectedEntityType",
      "type": "query",
      "visible": true,
      "input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n         AND isNotNull(vulnerable_component.name)\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n| sort timestamp desc\n| summarize values = array(\"All\", collectDistinct(affected_entity.type))",
      "multiple": true,
      "defaultValue": [
        "All"
      ]
    }
  ],
  "tiles": {
    "0": {
      "type": "data",
      "title": "",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| fields timestamp, Time=timestamp, \n          `Source product`=event.provider_product, `Risk level`=vulnerability.risk.level,\n          `Risk score`=vulnerability.risk.score, Vulnerability=vulnerability.title,\n          `Affected entity`=affected_entity.name, `Vulnerable component`=vulnerable_component.name\n| sort {timestamp, direction:\"descending\"}, {`Risk score`, direction:\"descending\"}\n| fieldsRemove timestamp\n| limit 50",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "table",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Risk level",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": "=",
                "label": "",
                "value": "CRITICAL"
              },
              {
                "id": 3,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "=",
                "label": "",
                "value": "HIGH"
              },
              {
                "id": 4,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
                },
                "comparator": "=",
                "label": "",
                "value": "MEDIUM"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "Source product",
            "valueAxisLabel": "Risk score",
            "categoryAxis": "Source product",
            "valueAxis": "Risk score"
          },
          "hiddenLegendFields": [],
          "fieldMapping": {
            "timestamp": "Time",
            "leftAxisValues": [
              "Risk score"
            ],
            "leftAxisDimensions": [
              "Source product"
            ]
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "timestamp",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [
            [
              "Repository"
            ]
          ],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Risk score"
          },
          "legend": "auto",
          "displayedFields": [
            "Source product"
          ],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Risk score",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "1": {
      "type": "markdown",
      "title": "",
      "content": "# Vulnerability findings\n\nOverview of the vulnerability findings reported by various products. Learn more about [Security events ingest](https://dt-url.net/1d63p0v)."
    },
    "2": {
      "type": "data",
      "title": "",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {\n    `Risk score`=toDouble(takeMax(vulnerability.risk.score)),\n    `Last finding`=takeMax(timestamp),\n    `Affected entities`=countDistinctExact(affected_entity.id),\n    `Vulnerable components`=countDistinctExact(vulnerable_component.name)\n    }, by:{\n    Vulnerability=vulnerability.external_id, \n    `Risk level`=vulnerability.risk.level}\n| sort {`Risk score`, direction:\"descending\"}, {`Affected entities`, direction:\"descending\"},{`Vulnerable components`,direction:\"descending\"}\n| fields `Risk level`, Vulnerability, `Affected entities`, `Vulnerable components`, `Last finding`\n| limit 10",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "table",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Risk score",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": "=",
                "label": "",
                "value": 9
              },
              {
                "id": 3,
                "color": {
                  "Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
                },
                "comparator": ">",
                "label": "",
                "value": 7
              }
            ]
          },
          {
            "id": 2,
            "field": "Risk level",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": "=",
                "label": "",
                "value": "CRITICAL"
              },
              {
                "id": 3,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "=",
                "label": "",
                "value": "HIGH"
              },
              {
                "id": 4,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
                },
                "comparator": "=",
                "label": "",
                "value": "MEDIUM"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "Risk level",
            "valueAxisLabel": "Affected entities",
            "categoryAxis": "Risk level",
            "valueAxis": "Affected entities"
          },
          "fieldMapping": {
            "timestamp": "Last finding",
            "leftAxisValues": [
              "Affected entities"
            ],
            "leftAxisDimensions": [
              "Risk level"
            ]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerability external id (CVE)",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [
            [
              "riskScore"
            ]
          ],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Risk level"
          },
          "legend": "auto",
          "displayedFields": [
            "Risk level"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Affected entities",
              "rangeAxis": ""
            },
            {
              "valueAxis": "Vulnerable components",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "5": {
      "type": "data",
      "title": "Critical risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"CRITICAL\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.external_id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Vulnerabilities",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": "≥",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "numberOfVulnerabilities"
          },
          "leftYAxisSettings": {
            "max": "auto",
            "scale": "linear"
          },
          "hiddenLegendFields": [],
          "legend": {
            "hidden": true
          },
          "seriesOverrides": [
            {
              "seriesId": [
                "findings"
              ],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                }
              }
            }
          ]
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerabilities",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value",
          "trend": {
            "isInverseTrend": true,
            "isVisible": true,
            "isRelative": false
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {},
          "sortBy": {
            "columnId": "[\"scandate\"]",
            "direction": "descending"
          }
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Vulnerabilities"
          },
          "legend": "auto",
          "displayedFields": [
            null
          ],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Vulnerabilities",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "criticals",
            "unitCategory": "unspecified",
            "baseUnit": "none",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1713193663126
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "6": {
      "type": "data",
      "title": "High risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"HIGH\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.external_id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Vulnerabilities",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "≥",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "scandate",
            "valueAxisLabel": "highs"
          },
          "leftYAxisSettings": {
            "max": "auto"
          },
          "hiddenLegendFields": [],
          "seriesOverrides": [
            {
              "seriesId": [
                "findings"
              ],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
                }
              }
            }
          ],
          "legend": {
            "hidden": true
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerabilities",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value",
          "trend": {
            "isInverseTrend": true,
            "isRelative": false
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Vulnerabilities"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Vulnerabilities",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "highs",
            "unitCategory": "unspecified",
            "baseUnit": "none",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1713193676655
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "7": {
      "type": "data",
      "title": "Number of critical vulnerabilities by artifact type",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"CRITICAL\"\n| summarize {countDistinctExact(vulnerability.external_id)}, \n             by:{affected_entity.type}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "categoricalBarChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "number-of-slices",
            "groupingThresholdValue": 10,
            "valueType": "absolute"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "affected_entity.type",
            "valueAxis": "countDistinctExact(vulnerability.external_id)",
            "categoryAxisLabel": "Artifact type",
            "valueAxisLabel": "Number of artifacts"
          },
          "colorPalette": "categorical"
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "error",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "hexagon",
          "dataMappings": {
            "value": "affected_entity.type"
          },
          "legend": {
            "0": "a",
            "1": "u",
            "2": "t",
            "3": "o",
            "position": "right",
            "hidden": false
          },
          "displayedFields": [
            "affected_entity.type"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "countDistinctExact(vulnerability.external_id)",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "10": {
      "type": "data",
      "title": "Number of vulnerabilities by risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {\n    numberOfVulnerabilities = countDistinctExact(vulnerability.external_id),\n    riskScore=takeMax(vulnerability.risk.score)}, by:{vulnerability.risk.level}\n| sort riskScore desc",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "donutChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute",
            "showTotalValue": false
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            },
            "NONE": {
              "color": "var(--dt-colors-charts-categorical-color-05-default, #84859a)",
              "added": 1718981822129
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "vulnerability.risk.level",
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxis": "numberOfVulnerabilities",
            "valueAxisLabel": "numberOfVulnerabilities"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "container_image.registry",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "vulnerability.risk.level"
          },
          "legend": "auto",
          "displayedFields": [
            "vulnerability.risk.level"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "numberOfVulnerabilities",
              "rangeAxis": ""
            },
            {
              "valueAxis": "riskScore",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "12": {
      "type": "data",
      "title": "Entities with high risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"HIGH\"\n| summarize {components=countDistinctExact(affected_entity.id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "components",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute"
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "registries"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "components",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "components"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "components",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "13": {
      "type": "data",
      "title": "Entities with critical risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"CRITICAL\"\n| summarize {components=countDistinctExact(affected_entity.id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "components",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute"
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "registries"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "components",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "components"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "components",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "14": {
      "type": "data",
      "title": "Vulnerabilities",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.external_id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute"
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "numberOfVulnerabilities"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerabilities",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Vulnerabilities"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Vulnerabilities",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "15": {
      "type": "data",
      "title": "Vulnerable components",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {components=countDistinctExact(vulnerable_component.name)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute"
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "registries"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "components",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "components"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "components",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "16": {
      "type": "markdown",
      "title": "",
      "content": "----\n## Affected artifacts\n---"
    },
    "17": {
      "type": "data",
      "title": "",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n// aggregation and custom filtering\n| summarize {\n        Critical=countIf(vulnerability.risk.level==\"CRITICAL\"),\n        High=countIf(vulnerability.risk.level==\"HIGH\"),\n        `Affected entities`=countDistinctExact(affected_entity.id),\n        `Last finding`=takeMax(timestamp)\n}, by:{Component=vulnerable_component.name}\n| sort {Critical, direction:\"descending\"}, {High, direction:\"descending\"},\n        {`Affected entities`, direction:\"descending\"}\n| limit 10",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "table",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Critical",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          },
          {
            "id": 2,
            "field": "High",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "Component",
            "valueAxisLabel": "Critical",
            "categoryAxis": "Component",
            "valueAxis": "Critical"
          },
          "fieldMapping": {
            "timestamp": "Last finding",
            "leftAxisValues": [
              "Critical"
            ],
            "leftAxisDimensions": [
              "Component"
            ]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "timestamp",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [
            [
              "Repository"
            ]
          ],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Component"
          },
          "legend": "auto",
          "displayedFields": [
            "Component"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Critical",
              "rangeAxis": ""
            },
            {
              "valueAxis": "High",
              "rangeAxis": ""
            },
            {
              "valueAxis": "Affected entities",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "18": {
      "type": "data",
      "title": "",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {\n        Critical=countIf(vulnerability.risk.level==\"CRITICAL\"),\n        High=countIf(vulnerability.risk.level==\"HIGH\"),\n        `Vulnerable components`=countDistinctExact(vulnerable_component.name)\n}, by:{`Affected entity`=affected_entity.name, ID=affected_entity.id}\n| sort {Critical, direction:\"descending\"}, {High, direction:\"descending\"},\n       {`Vulnerable components`, direction:\"descending\"}\n| limit 10",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "table",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Critical",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          },
          {
            "id": 2,
            "field": "High",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
                },
                "comparator": ">",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "Affected entity",
            "categoryAxisLabel": "Affected entity",
            "valueAxis": "Critical",
            "valueAxisLabel": "Critical"
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerability external id (CVE)",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {},
          "sortBy": {
            "columnId": "[\"# of Critical\"]",
            "direction": "descending"
          }
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Affected entity"
          },
          "legend": "auto",
          "displayedFields": [
            "Affected entity"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Critical",
              "rangeAxis": ""
            },
            {
              "valueAxis": "High",
              "rangeAxis": ""
            },
            {
              "valueAxis": "Vulnerable components",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "19": {
      "type": "markdown",
      "title": "",
      "content": "----\n## Vulnerabilities\n---"
    },
    "20": {
      "type": "data",
      "title": "Medium risk",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| filter vulnerability.risk.level==\"MEDIUM\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.external_id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Vulnerabilities",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-06-default, #a9780f)"
                },
                "comparator": "≥",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "scandate",
            "valueAxisLabel": "highs"
          },
          "leftYAxisSettings": {
            "max": "auto"
          },
          "hiddenLegendFields": [],
          "seriesOverrides": [
            {
              "seriesId": [
                "findings"
              ],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
                }
              }
            }
          ],
          "legend": {
            "hidden": true
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "Vulnerabilities",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value",
          "trend": {
            "isInverseTrend": true,
            "isRelative": false
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "Vulnerabilities"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Vulnerabilities",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "highs",
            "unitCategory": "unspecified",
            "baseUnit": "none",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1713193676655
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "21": {
      "type": "data",
      "title": "Vulnerability findings over time by provider product",
      "query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// get the latest vulnerability finding report for the affected entity and the component of the repository in the registry\n| makeTimeseries count(), time:{timestamp}, interval:1d, by:{event.provider_product}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "areaChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "event.provider_product",
            "valueAxisLabel": "interval",
            "categoryAxis": "event.provider_product",
            "valueAxis": "interval"
          },
          "hiddenLegendFields": [],
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": [
              "count()"
            ],
            "leftAxisDimensions": [
              "event.provider_product"
            ]
          },
          "leftYAxisSettings": {
            "scale": "linear"
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "recordField": "timestamp",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [
            [
              "Repository"
            ]
          ],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "event.provider_product"
          },
          "legend": "auto",
          "displayedFields": [
            "event.provider_product"
          ],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "22": {
      "type": "data",
      "title": "Affected entities",
      "query": "fetch events\n// data access\n| filter dt.system.bucket == \"default_security_custom_events\"\n     AND event.type == \"VULNERABILITY_FINDING_EVENT\"\n     AND isNotNull(vulnerable_component.name)\n| dedup {affected_entity.id, vulnerability.external_id, vulnerable_component.name}, sort: {timestamp desc}\n// dashboard variables\n| filter (in(\"All\",$Product) OR in(event.provider_product, $Product))\n     AND (in(\"All\",$RiskLevel) OR in(vulnerability.risk.level, $RiskLevel))\n     AND (in(\"All\",$Vulnerability) OR in(vulnerability.external_id, $Vulnerability))\n     AND (in(\"All\",$Component) OR in(vulnerable_component.name, $Component))\n     AND (in(\"All\",$AffectedEntityType) OR in(affected_entity.type, $AffectedEntityType))\n// aggregation and custom filtering\n| summarize {entities=countDistinctExact(affected_entity.id)}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "absolute",
            "groupingThresholdValue": 0,
            "valueType": "absolute"
          },
          "categoryOverrides": {
            "NOT_AVAILABLE": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1713354177614
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "vulnerability.risk.level",
            "valueAxisLabel": "registries"
          },
          "hiddenLegendFields": [],
          "colorPalette": "security-risk-level"
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "entities",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "value"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "entities"
          },
          "displayedFields": [
            null
          ],
          "legend": {
            "hidden": false,
            "position": "auto"
          },
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "entities",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "23": {
      "type": "markdown",
      "title": "",
      "content": "##### Top 10 vulnerabilities by number of affected entities\n____\n"
    },
    "24": {
      "type": "markdown",
      "title": "",
      "content": "##### Top 10 vulnerable components by number of critical findings\n____\n"
    },
    "25": {
      "type": "markdown",
      "title": "",
      "content": "##### Top 10 affected entities by number of critical findings\n____\n"
    },
    "26": {
      "type": "markdown",
      "title": "",
      "content": "##### Recent 50 vulnerability findings\n____\n"
    }
  },
  "layouts": {
    "0": {
      "x": 0,
      "y": 31,
      "w": 24,
      "h": 12
    },
    "1": {
      "x": 0,
      "y": 0,
      "w": 24,
      "h": 2
    },
    "2": {
      "x": 0,
      "y": 24,
      "w": 12,
      "h": 6
    },
    "5": {
      "x": 0,
      "y": 10,
      "w": 3,
      "h": 2
    },
    "6": {
      "x": 0,
      "y": 12,
      "w": 3,
      "h": 2
    },
    "7": {
      "x": 15,
      "y": 8,
      "w": 9,
      "h": 8
    },
    "10": {
      "x": 3,
      "y": 8,
      "w": 9,
      "h": 8
    },
    "12": {
      "x": 12,
      "y": 14,
      "w": 3,
      "h": 2
    },
    "13": {
      "x": 12,
      "y": 12,
      "w": 3,
      "h": 2
    },
    "14": {
      "x": 0,
      "y": 8,
      "w": 3,
      "h": 2
    },
    "15": {
      "x": 12,
      "y": 8,
      "w": 3,
      "h": 2
    },
    "16": {
      "x": 12,
      "y": 6,
      "w": 12,
      "h": 2
    },
    "17": {
      "x": 12,
      "y": 24,
      "w": 12,
      "h": 6
    },
    "18": {
      "x": 0,
      "y": 17,
      "w": 24,
      "h": 6
    },
    "19": {
      "x": 0,
      "y": 6,
      "w": 12,
      "h": 2
    },
    "20": {
      "x": 0,
      "y": 14,
      "w": 3,
      "h": 2
    },
    "21": {
      "x": 0,
      "y": 2,
      "w": 24,
      "h": 4
    },
    "22": {
      "x": 12,
      "y": 10,
      "w": 3,
      "h": 2
    },
    "23": {
      "x": 0,
      "y": 23,
      "w": 12,
      "h": 1
    },
    "24": {
      "x": 12,
      "y": 23,
      "w": 12,
      "h": 1
    },
    "25": {
      "x": 0,
      "y": 16,
      "w": 24,
      "h": 1
    },
    "26": {
      "x": 0,
      "y": 30,
      "w": 24,
      "h": 1
    }
  },
  "importedWithCode": false
}